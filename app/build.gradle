plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.rimapps.kotlintuts"
        minSdk 29
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    def moshi_version = "1.9.3"
    def retrofit_version = "2.9.0"
    def lifecycle_version = "2.4.0-alph02"
    def coroutine = "1.5.1"
    def coroutineScope = "2.3.1"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$coroutineScope"
    //viewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0-alpha05"
    //Livedata
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1"
    //retrofit - to take care of networking side, gonna take care of downloading data like with a get request
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    //moshi - for json data to kotlin object
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    //Retrofit with moshi - to convert retrofit to moshi
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    //coil - to load url of images// alternative for glide and picasso
    implementation("io.coil-kt:coil-compose:2.0.0-rc02")
    //fresco
    implementation 'com.facebook.fresco:fresco:2.6.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'
}